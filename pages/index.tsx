import Head from "next/head";
import { GetStaticProps } from "next";
import api from "./api";
import { Box, Flex, IconButton, Img, Slide } from "@chakra-ui/react";
import {
  IoIosArrowDropleftCircle,
  IoIosArrowDroprightCircle,
} from "react-icons/io";
import { useEffect, useRef } from "react";

interface IMovie {
  adult: boolean;
  backdrop_path: string;
  id: number;
  title: string;
  original_language: string;
  original_title: string;
  overview: string;
  poster_path: string;
  media_type: string;
  genre_ids: Array<number>;
  popularity: number;
  release_date: string;
  video: boolean;
  vote_average: number;
  vote_count: number;
}

interface IHomeProps {
  data: {
    results: IMovie[];
  };
}

export default function Home({ data }: IHomeProps) {
  const carousel = useRef<HTMLDivElement>(null);

  const scrollLeft = () => {
    if (carousel.current) carousel.current.scrollLeft -= 1050;
  };

  const scrolRight = () => {
    if (carousel.current) carousel.current.scrollLeft += 1050;
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/" />
      </Head>
      <main>
        <Flex>
          <Flex
            backgroundColor="#000000a5"
            position="absolute"
            justifyContent="center"
            alignItems="center"
            height="full"
            opacity={0}
            transition="ease-in .4s all"
            _hover={{ opacity: "100" }}
            onClick={scrollLeft}
            cursor="pointer"
          >
            <IoIosArrowDropleftCircle color="pink" size={32} />
          </Flex>
          <Flex
            ref={carousel}
            height={250}
            animation="scroll easy .5s all"
            overflow="hidden"
            scrollBehavior="smooth"
          >
            {data.results.map((movie) => (
              <Img
                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}
                alt={movie.title}
                height="100%"
                width="30%"
              />
            ))}
          </Flex>

          <Flex
            backgroundColor="#000000a5"
            position="absolute"
            justifyContent="center"
            alignItems="center"
            height="full"
            right="0"
            opacity={0}
            transition="ease-in .4s all"
            _hover={{ opacity: "100" }}
            onClick={scrolRight}
            cursor="pointer"
          >
            <IoIosArrowDroprightCircle color="pink" size={32} />
          </Flex>
        </Flex>
      </main>
    </div>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const { data } = await api.get("trending/movie/day");
  return {
    props: {
      data,
    },
    revalidate: 2,
  };
};
